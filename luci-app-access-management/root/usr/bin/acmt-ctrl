#!/bin/bash
# Hotspot & PPPoE Users blocker to RadMonv2 gateway router port by Access Management
# Created by @Taufik ( https://t.me/taufik_n_a )
# © 2025 AlphaWireless.net by @Taufik

ACTION=$1
CTRL_LOOP=3
PID_FILE="/tmp/run/acmt.pid"
CTRL_PID_FILE="/tmp/run/acmt_ctrl.pid"

if [ -z "$ACTION" ]; then
    echo "⚠️ The command does not exist."
    echo "run with ${0} (start|stop|restart|reload|status)"
    exit 1
elif [ "$ACTION" != "start" ] && [ "$ACTION" != "stop" ] && [ "$ACTION" != "restart" ] && [ "$ACTION" != "reload" ] && [ "$ACTION" != "status" ] && [ "$ACTION" != "up" ]; then
    echo "⚠️ Command not available."
    echo "run with ${0} (start|stop|restart|reload|status)"
    exit 1
fi

if [ -f "$PID_FILE" ]; then
    PID="$(cat "$PID_FILE")"
else
    PID=$(ps | grep '[a]cmt start' | awk '{print $1}')
fi

if [ -f "$CTRL_PID_FILE" ]; then
    CTRL_PID="$(cat "$CTRL_PID_FILE")"
else
    CTRL_PID=$(ps | grep '[a]cmt-ctrl up' | awk '{print $1}')
fi

if [ "$ACTION" = "start" ]; then
    nohup acmt start >/dev/null 2>&1 &
    exit 0
fi

if [ "$ACTION" = "stop" ]; then
    acmt stop >/dev/null 2>&1
    exit 1
fi

if [ "$ACTION" = "restart" ]; then
    acmt restart >/dev/null 2>&1
    exit 1
fi

if [ "$ACTION" = "reload" ]; then
    acmt reload >/dev/null 2>&1
    exit 1
fi

if [ "$ACTION" = "status" ]; then
    if [ -n "$PID" ] && kill -0 "$PID" && nft list chain inet acmt input >/dev/null 2>&1; then
        echo "RUNNING (PID: $PID)"
        exit 0
    else
        echo "NOT RUNNING"
        exit 1
    fi
fi

if [ "$ACTION" = "up" ]; then
    if [ -t 0 ]; then
        exit 1
    elif [ -n "$CTRL_PID" ] && kill -0 "$CTRL_PID" 2>/dev/null; then
        exit 0
    else
        echo $$ > "$CTRL_PID_FILE"
        while true; do
            if ps -eo pid,cmd | grep -E '[a]cmt-ctrl (start|stop|restart|reload)' | grep -vw $$ >/dev/null; then
                sleep 1
                continue
            fi

            if ! kill -0 "$PID" 2>/dev/null || [ ! -f "$PID_FILE" ]; then
                acmt stop enabled_0 >/dev/null 2>&1
            fi

            sleep "$CTRL_LOOP"
        done
    fi
fi