'use strict';'require form';'require view';
document.head.append(E('style',{'type':'text/css'},`:root {--app-id-font-color: #454545;--app-id-font-shadow: #fff;--app-id-connected-color: #6bdebb;--app-id-disconnected-color: #f8aeba;--app-id-undefined-color: #dfdfdf;}:root[data-darkmode="true"] {--app-id-font-color: #f6f6f6;--app-id-font-shadow: #4d4d4d;--app-id-connected-color: #005F20;--app-id-disconnected-color: #a93734;--app-id-undefined-color: #4d4d4d;}.id-connected {--on-color: var(--app-id-font-color);background-color: var(--app-id-connected-color) !important;border-color: var(--app-id-connected-color) !important;color: var(--app-id-font-color) !important;text-shadow: 0 1px 1px var(--app-id-font-shadow);}.id-disconnected {--on-color: var(--app-id-font-color);background-color: var(--app-id-disconnected-color) !important;border-color: var(--app-id-disconnected-color) !important;color: var(--app-id-font-color) !important;text-shadow: 0 1px 1px var(--app-id-font-shadow);}.id-undefined {--on-color: var(--app-id-font-color);background-color: var(--app-id-undefined-color) !important;border-color: var(--app-id-undefined-color) !important;color: var(--app-id-font-color) !important;text-shadow: 0 1px 1px var(--app-id-font-shadow);}.id-label-status {display: inline-block;word-wrap: break-word;margin: 2px !important;padding: 4px 8px;border: 1px solid;-webkit-border-radius: 4px;-moz-border-radius: 4px;border-radius: 4px;font-weight: bold;}`));
return view.extend({render: function () {const m = new form.Map('uhttpd', _('uHTTPd Web Server'), _('Main uHTTPd Web Server & Users'));const s_status = m.section(form.TypedSection, '_status', _('Status'));s_status.anonymous = true;s_status.render = function () {return E('div', { class: 'cbi-section' }, [E('div', { id: 'uhttpd_status' }, [E('p', { class: 'id-label-status id-undefined' }, [E('span', { class: 'id-undefined' }, [E('i', _('Collecting data ...'))])])])]);};const s_main = m.section(form.NamedSection, 'main', 'uhttpd', _('Main Server'));s_main.anonymous = false;s_main.addremove = false;s_main.tab('general', _('General'));s_main.tab('listen', _('Listen'));s_main.tab('index', _('Index'));s_main.taboption('general', form.Value, 'home', _('Home Directory'));s_main.taboption('general', form.Value, 'max_requests', _('Max Requests'));s_main.taboption('general', form.Value, 'max_connections', _('Max Connections'));s_main.taboption('listen', form.DynamicList, 'listen_http', _('Listen HTTP'));s_main.taboption('listen', form.DynamicList, 'listen_https', _('Listen HTTPS'));s_main.taboption('index', form.DynamicList, 'index_page', _('Index Pages'));const s_users = m.section(form.NamedSection, 'users', 'uhttpd', _('Users Server'));s_users.anonymous = false;s_users.addremove = false;s_users.tab('general', _('General'));s_users.tab('listen', _('Listen'));s_users.tab('index', _('Index'));s_users.taboption('general', form.Value, 'home', _('Home Directory'));s_users.taboption('general', form.Value, 'max_requests', _('Max Requests'));s_users.taboption('listen', form.DynamicList, 'listen_http', _('Listen HTTP'));s_users.taboption('listen', form.DynamicList, 'listen_https', _('Listen HTTPS'));s_users.taboption('index', form.DynamicList, 'index_page', _('Index Pages'));
function updateStatus() {fetch('/cgi-bin/luci/admin/services/acmt/uhttpd_status').then(res => res.json()).then(data => {const el = document.getElementById('uhttpd_status');if (!el) return;if (data.running === true) {el.innerHTML = `<p class="id-label-status id-connected"><span class="id-connected"><i>uHTTPd RUNNING ${data.pid}</i></span></p>`;} else {el.innerHTML = `<p class="id-label-status id-disconnected"><span class="id-disconnected"><i>uHTTPd NOT RUNNING</i></span></p>`;}}).catch(() => {const el = document.getElementById('uhttpd_status');if (el) el.innerHTML = `<p class="id-label-status id-undefined"><span class="id-undefined"><i>Failed to retrieve status (error)</i></span></p>`;});}setTimeout(updateStatus, 10);setInterval(updateStatus, 1000);m.applyaction = function () {return fetch('/cgi-bin/luci/admin/services/acmt/uhttpd_restart', { method: 'POST' });};return m.render();}});